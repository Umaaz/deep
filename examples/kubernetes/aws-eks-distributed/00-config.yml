# Create a name space to contain deep
apiVersion: v1
kind: Namespace
metadata:
  name: deep
---
# Create the configmap that is used by deep
apiVersion: v1
kind: ConfigMap
metadata:
  name: deep-config
  namespace: deep
data:
  deep.yaml: |
    server:
      http_listen_port: 3300
      grpc_listen_port: 43315
    
    distributor:
      receivers:
        deep:
    
    ingester:
      max_block_duration: 5m               
    
    compactor:
      compaction:
        block_retention: 1h                
    
    memberlist:
      abort_if_cluster_join_fails: false
      bind_port: 7946
      join_members:
        - ingester.deep.svc.cluster.local:7946
    
    metrics_generator:
      registry:
        external_labels:
          source: deep
          cluster: docker-compose
      storage:
        path: /tmp/deep/generator/wal
        remote_write:
          - url: http://prometheus:9090/api/v1/write
            send_exemplars: true
    tracepoint:
      api:
        worker:
          config:
            frontend_address: query-frontend-headless.deep.svc.cluster.local:43315
    
    querier:
      frontend_worker:
        config:
          frontend_address: query-frontend-headless.deep.svc.cluster.local:43315
          
    storage:
      tracepoint:
        backend: s3
        wal:
          path: /tmp/deep/wal
        s3:
          bucket: <name-of-bucket>          # The name of the bucket to use
          access_key: <AWS-Access-Key>      # The AWS Access key for the IAM role that has permission for the bucket
          secret_key: <AWS-Secret-Key>      # The AWS Secret key for the IAM role that has permission for the bucket
          region: <AWS-Region-Name>         # The AWS region name e.g. eu-west-1
          endpoint: <AWS-S3-Endpoint>       # The URL endpoint for S3. e.g. s3.dualstack.eu-west-1.amazonaws.com
    
    overrides:
      metrics_generator_processors: [ ] # enables metrics generator
---
# This is the public Service used to connect clients to DEEP
apiVersion: v1
kind: Service
metadata:
  name: distributor
  namespace: deep
spec:
  selector:
    service: distributor
  type: LoadBalancer
  ports:
    - port: 43315
      name: grpc
---
# This is the public Service used to connect Grafana
apiVersion: v1
kind: Service
metadata:
  name: query-frontend
  namespace: deep
spec:
  selector:
    service: query-frontend
  type: LoadBalancer
  ports:
    - port: 3300
      name: http
---
# This is the internal headless service used by workers (tracepoint-api, querier) to connect to the frontend queue
apiVersion: v1
kind: Service
metadata:
  name: query-frontend-headless
  namespace: deep
spec:
  clusterIP: None
  selector:
    service: query-frontend
  ports:
    - port: 3300
      name: http
    - port: 43315
      name: grpc
---
# This is the internal headless service used by the DEEP ring to connect the internal services together
apiVersion: v1
kind: Service
metadata:
  name: ingester
  namespace: deep
spec:
  selector:
    service: ingester
  clusterIP: None
  ports:
    - port: 43315
      name: grpc
    - port: 7946
      name: gossip
